/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module adder_13 (
    input [15:0] x,
    input [15:0] y,
    input [5:0] alufn,
    output reg [15:0] out,
    output reg z,
    output reg v,
    output reg n
  );
  
  
  
  reg [15:0] out_copy;
  
  always @* begin
    out_copy = 16'h0000;
    
    case (alufn[0+0-:1])
      1'h1: begin
        out_copy = x - y;
      end
      1'h0: begin
        out_copy = x + y;
      end
      default: begin
        out_copy = 16'h0000;
      end
    endcase
    out = out_copy;
    z = (out_copy == 16'h0000);
    if (alufn[0+0-:1] == 1'h0) begin
      v = ((x[15+0-:1] == y[15+0-:1]) && (x[15+0-:1] != out_copy[15+0-:1]));
    end else begin
      v = ((x[15+0-:1] != y[15+0-:1]) && (x[15+0-:1] != out_copy[15+0-:1]));
    end
    n = out_copy[15+0-:1];
  end
endmodule
