module gameBeta (
    input clk,        // clock
    input rst,        // reset
    input buttons[3], // button input, 0-2 left to right
    output debug[16],
    input proceed
  ) {
  
  gameAlu alu;
  sig aluB[16];
  
  // gameCU cu;
  
  .clk(clk) {
    edge_detector edTimer(#RISE(1), #FALL(0));
    
    .rst(rst) {
      gameCU cu;
      counter slowTimer(#SIZE(1), #DIV(26));
    }
  }

  always {
    // Timer
    edTimer.in = slowTimer.value;
    cu.timerTick = edTimer.out;
    
    // CU - bootstrap branching reg to CU
    // cu.clk = slowTimer.value;
    // cu.rst = rst;
    cu.buttons = buttons;    
    cu.reg48 = 0; // placeholder for reg[0x48]
    cu.proceed = proceed;
    
    // REGFILE
    
    // ALU
    case(cu.bsel) {
      0: aluB = 16b0; // placeholder for rdb
      1: aluB = cu.c;
      default:
        aluB = 16b0;
    }
    
    alu.x = 16b0; // placeholder for rda
    alu.y = aluB;
    alu.alufn = cu.alufn;
    
    // DEBUG
    debug = cu.debug;
  }
}
